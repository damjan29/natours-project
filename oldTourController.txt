 // 1A)Filtering
        // const queryObj = { ...req.query }; // pravimo kopiju objekta
        // const excludedFields = ['page', 'sort', 'limit', 'fields'];
        // excludedFields.forEach(el => delete queryObj[el]);
        // console.log(req.query);

        // // 1B) Advanced filtering
        // let queryStr = JSON.stringify(queryObj);
        // queryStr = queryStr.replace(/\b(gte|gt|lte|lte)\b/g, match => `$${match}`);

        // let query = Tour.find(JSON.parse(queryStr));

        // 2) Sorting
        // if (req.query.sort) {
        //     const sortBy = req.query.sort.split(',').join(' ');
        //     query = query.sort(sortBy);
        // } else {
        //     query = query.sort('-createdAt')
        // }

        // 3) Field limiting 
        // if (req.query.fields) {
        //     const fields = req.query.fields.split(',').join(' ');
        //     query = query.select(fields)
        // } else {
        //     query = query.select('-__v');
        // }

        // 4) Pagination
        // const page = req.query.page * 1 || 1;
        // const limit = req.query.limit * 1 || 100;
        // const skip = (page - 1) * limit;

        // query = query.skip(skip).limit(limit);

        // if (req.query.page) {
        //     const numberOfTours = await Tour.countDocuments();
        //     if (skip >= numberOfTours) throw new Error('This page does not exists!')
        // };


        const query = Tour.find(queryObj);

        const tours = await query;
